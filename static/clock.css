/*adapted from:
https://medium.com/the-andela-way/create-a-pure-css-clock-with-svg-f123bcc41e46*/
:root{
  --smoke: #2e4054;
  --wine: #cc274c;
  --dark-smoke:#6a7285;
  --light-sky:#bed2e0;
  --darkish-sky:#bed2e040;
  --lemon: #ffeea6;
  --sky-blue: #87ceeb;
  --angle: calc(360/12);
  --x0y0: 20px;
  --dxdy: 13px;
}
html {
  background: var(--dark-smoke);
}
svg {
  width: 200px;
  fill: var(--light-sky);
  stroke: black;
  stroke-width: 1;
  stroke-linecap: round;
  transform: rotate(-90deg);
  --start-seconds: 0;
  --start-minutes: 45;
  --start-hours: 11;
}
.inner_dial{
  fill: var(--smoke);
  stroke: var(--smoke);
  stroke-width: 0;
}
.marks {
  transform: translate(var(--x0y0), var(--x0y0));
  stroke-width: 0.2;
}
.marks > line:nth-child(1) {
 /* There are 12 marks, so we rotate by 30deg (12 * 30 = 360) */
  transform: rotate(calc(1 * var(--angle) *1deg));
}
.marks > line:nth-child(2) {
  transform: rotate(calc(2 * var(--angle) *1deg));
}
/*.marks > line:nth-child(3) {
 transform: rotate(calc(3 * var(--angle)*1deg));
 stroke-width: 0.5;
}*/
.marks > line:nth-child(4) {
  transform: rotate(calc(4 * var(--angle) *1deg));
}
.marks > line:nth-child(5) {
  transform: rotate(calc(5 * var(--angle) *1deg));
}
.marks > line:nth-child(6) {
  transform: rotate(calc(6 * var(--angle) *1deg));
  stroke-width: 0.5;
}
/* commented to allow 2nd dial
.marks > line:nth-child(7) {
  transform: rotate(calc(7 * var(--angle) *1deg));
}
.marks > line:nth-child(8) {
  transform: rotate(calc(8 * var(--angle) *1deg));
}*/
.marks > line:nth-child(9) {
  transform: rotate(calc(9 * var(--angle) *1deg));
  stroke-width: 0.5;
}
.marks > line:nth-child(10) {
  transform: rotate(calc(10 * var(--angle) *1deg));
}
.marks > line:nth-child(11) {
  transform: rotate(calc(11 * var(--angle) *1deg));
}
.marks > line:nth-child(12) {
  transform: rotate(calc(12 * var(--angle) *1deg));
  stroke-width: 0.5;
}
.minute,.hour{
  transform: translate(var(--x0y0), var(--x0y0)) rotate(0deg);
}
.seconds {
  stroke-width: 0.3;
  stroke: var(--wine);
  transform: translate(var(--dxdy),var(--dxdy)) rotate(calc(var(--start-seconds)*6deg));
  animation: rotSecondsHand 60s steps(60) infinite; /*analog step
  animation: rotSecondsHand 60s steps(512) infinite;*/
}
.minute {
  stroke-width: 0.6;
  transform: translate(var(--x0y0),var(--x0y0)) rotate(calc(var(--start-minutes)*6deg));
  animation: rotMinuteHand 3600s steps(60) infinite;
  animation-delay: calc(var(--start-seconds) * -1 *1s);
}
.hour {
  stroke-width: 1;
  transform: translate(var(--x0y0),var(--x0y0)) rotate(calc(var(--start-hours)*30deg));
  animation: rotHourHand calc(12*60*60s) linear infinite;
  animation-delay: calc(calc(var(--start-minutes) * -60 *1s) + calc(var(--start-seconds) * -1 *1s));
}
.pin {
  stroke: var(--wine);
  stroke-width: 0.2;
  fill: var(--wine);
}
.texty{
  font-family: sans-serif;
  stroke: none;
}
.dateText{
  font-size:4px;
  fill: var(--wine);
  transform: translate(19px,28px) rotate(90deg);
}
.dials{
  fill:var(--light-sky);
  font-size: 3px;
}
/*.text12{ transform: translate(32px,18px) rotate(90deg);}
.text6{ transform: translate(6px,18px) rotate(90deg);}
.text9{ transform: translate(19px,6px) rotate(90deg);}
*/
.text12{transform: translate(16px,11px) rotate(90deg);}
.text6{transform: translate(7px,11px) rotate(90deg);}
.text9{transform: translate(12px,6px) rotate(90deg);}
.text3{transform: translate(12px,16px) rotate(90deg);}
@keyframes rotSecondsHand{
  from{
    transform: translate(var(--dxdy),var(--dxdy)) rotate(calc(var(--start-seconds)*6deg));
  }
  to{
    transform: translate(var(--dxdy),var(--dxdy)) rotate(calc(var(--start-seconds)*6deg + 360deg));
  }
}

@keyframes rotMinuteHand{
  from{
    transform: translate(var(--x0y0),var(--x0y0)) rotate(calc(var(--start-minutes)*6deg));
  }
  to{
    transform: translate(var(--x0y0),var(--x0y0)) rotate(calc(var(--start-minutes)*6deg + 360deg));
  }
}

@keyframes rotHourHand{
  from{
    transform: translate(var(--x0y0),var(--x0y0)) rotate(calc(var(--start-hours) * 30deg));
  }
  to{
    transform: translate(var(--x0y0),var(--x0y0)) rotate(calc(var(--start-hours) * 30deg + 360deg));
  }
}
